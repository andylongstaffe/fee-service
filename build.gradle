apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'tomcat'
apply plugin: 'eclipse-wtp'

// Just run gradle eclipse to set up the project - dont do gradle eclipseWtp

buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:1.2.4'
    }
}
tomcat {
	// httpPort = 8090
}

repositories {
	mavenCentral()
}

dependencies {
	// Uncomment the ones that you want

	compile 'com.sun.jersey:jersey-core:1.13'
	compile 'com.sun.jersey:jersey-server:1.13'
	compile 'com.sun.jersey:jersey-servlet:1.13'
	compile 'com.sun.jersey:jersey-json:1.13'
	compile 'com.sun.jersey.contribs:jersey-spring:1.18.1'
	
	compile 'org.springframework:spring-webmvc:4.0.6.RELEASE'   
	
	providedCompile 'javax.ws.rs:javax.ws.rs-api:2.0'
	
	
    
  compile group: 'org.slf4j', name: 'slf4j-api', version: '1.7.+'
  compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.+'
   	
  testCompile 'junit:junit-dep:4.11'
  testCompile 'org.springframework:spring-test:3.2.3.RELEASE'
   	
  testCompile 'com.jayway.restassured:rest-assured:2.3.2' 	
  testCompile 'com.jayway.restassured:modules:2.3.2'
  testCompile 'com.jayway.restassured:json-schema-validator:2.3.2'
  
  def tomcatVersion = '7.0.11'
  tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
         "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
  tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
        exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
  }
  
}
